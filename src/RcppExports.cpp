// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// fetch
RawVector fetch(CharacterVector server, CharacterVector method, RawVector requestArg, CharacterVector metadata);
RcppExport SEXP _bareun_fetch(SEXP serverSEXP, SEXP methodSEXP, SEXP requestArgSEXP, SEXP metadataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type server(serverSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type method(methodSEXP);
    Rcpp::traits::input_parameter< RawVector >::type requestArg(requestArgSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type metadata(metadataSEXP);
    rcpp_result_gen = Rcpp::wrap(fetch(server, method, requestArg, metadata));
    return rcpp_result_gen;
END_RCPP
}
// grpc_version
CharacterVector grpc_version();
RcppExport SEXP _bareun_grpc_version() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(grpc_version());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bareun_fetch", (DL_FUNC) &_bareun_fetch, 4},
    {"_bareun_grpc_version", (DL_FUNC) &_bareun_grpc_version, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_bareun(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
